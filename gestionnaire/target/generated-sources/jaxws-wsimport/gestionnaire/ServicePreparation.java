
package gestionnaire;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ServicePreparation", targetNamespace = "http://ensibs.projet.fr/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServicePreparation {


    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<gestionnaire.DebutPreparationResponse>
     */
    @WebMethod(operationName = "debutPreparation")
    @RequestWrapper(localName = "debutPreparation", targetNamespace = "http://ensibs.projet.fr/", className = "gestionnaire.DebutPreparation")
    @ResponseWrapper(localName = "debutPreparationResponse", targetNamespace = "http://ensibs.projet.fr/", className = "gestionnaire.DebutPreparationResponse")
    public Response<DebutPreparationResponse> debutPreparationAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        gestionnaire.DebutPreparation.Arg2 arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "debutPreparation")
    @RequestWrapper(localName = "debutPreparation", targetNamespace = "http://ensibs.projet.fr/", className = "gestionnaire.DebutPreparation")
    @ResponseWrapper(localName = "debutPreparationResponse", targetNamespace = "http://ensibs.projet.fr/", className = "gestionnaire.DebutPreparationResponse")
    public Future<?> debutPreparationAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        gestionnaire.DebutPreparation.Arg2 arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<DebutPreparationResponse> asyncHandler);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "debutPreparation", targetNamespace = "http://ensibs.projet.fr/", className = "gestionnaire.DebutPreparation")
    @ResponseWrapper(localName = "debutPreparationResponse", targetNamespace = "http://ensibs.projet.fr/", className = "gestionnaire.DebutPreparationResponse")
    @Action(input = "http://ensibs.projet.fr/ServicePreparation/debutPreparationRequest", output = "http://ensibs.projet.fr/ServicePreparation/debutPreparationResponse")
    public boolean debutPreparation(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        int arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        gestionnaire.DebutPreparation.Arg2 arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

}
